{"timestamp":"2025-06-08T21:57:30.671685","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-08T21:57:30.672119","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/duration-prediction_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-08T21:57:33.611062","level":"info","event":"Done. Returned value was: (       VendorID lpep_pickup_datetime  ...   duration    PU_DO\n0             2  2021-02-01 00:34:03  ...  17.916667  130_205\n1             2  2021-02-01 00:04:00  ...   6.500000  152_244\n2             2  2021-02-01 00:18:51  ...  15.250000   152_48\n3             2  2021-02-01 00:53:27  ...  18.233333  152_241\n4             2  2021-02-01 00:57:46  ...   8.966667    75_42\n...         ...                  ...  ...        ...      ...\n64567         2  2021-02-28 22:19:00  ...  10.000000    129_7\n64568         2  2021-02-28 23:18:00  ...   9.000000  116_166\n64569         2  2021-02-28 23:44:00  ...  14.000000   74_151\n64570         2  2021-02-28 23:07:00  ...   7.000000    42_42\n64571         2  2021-02-28 23:43:00  ...   7.000000    42_41\n\n[61921 rows x 22 columns], array([17.91666667,  6.5       , 15.25      , ..., 14.        ,\n        7.        ,  7.        ]))","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-08T21:57:33.611334","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0197518c-679a-7f18-aeba-a6d926baa9aa'), task_id='create_dict_val', dag_id='duration_prediction_dag', run_id='manual__2025-06-08T21:57:25.513936+00:00', try_number=1, map_index=-1, hostname='e3c3c14a0d0f', context_carrier={}, task=<Task(PythonOperator): create_dict_val>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 6, 8, 21, 57, 30, 457730, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-06-08T21:57:33.687931","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"TypeError","exc_value":"cannot serialize object of type <class 'numpy.ndarray'>","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":849,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1193,"name":"_push_xcom_if_needed"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":526,"name":"_xcom_push"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/xcom.py","lineno":64,"name":"set"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/xcom.py","lineno":283,"name":"serialize_value"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py","lineno":152,"name":"serialize"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py","lineno":129,"name":"serialize"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py","lineno":185,"name":"serialize"}]}]}
