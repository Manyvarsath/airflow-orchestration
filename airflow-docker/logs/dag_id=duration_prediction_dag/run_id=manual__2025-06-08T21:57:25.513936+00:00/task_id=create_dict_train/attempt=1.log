{"timestamp":"2025-06-08T21:57:30.670509","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-08T21:57:30.671088","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/duration-prediction_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-08T21:57:33.708234","level":"info","event":"Done. Returned value was: (       VendorID lpep_pickup_datetime  ...   duration    PU_DO\n0             2  2021-01-01 00:15:56  ...   3.933333   43_151\n1             2  2021-01-01 00:25:59  ...   8.750000  166_239\n2             2  2021-01-01 00:45:57  ...   5.966667    41_42\n3             2  2020-12-31 23:57:51  ...   7.083333   168_75\n7             2  2021-01-01 00:26:31  ...   2.316667    75_75\n...         ...                  ...  ...        ...      ...\n76513         2  2021-01-31 21:38:00  ...  38.000000    81_90\n76514         2  2021-01-31 22:43:00  ...  38.000000   35_213\n76515         2  2021-01-31 22:16:00  ...  11.000000    74_69\n76516         2  2021-01-31 23:10:00  ...  27.000000  168_215\n76517         2  2021-01-31 23:25:00  ...  10.000000  119_244\n\n[73908 rows x 22 columns], array([ 3.93333333,  8.75      ,  5.96666667, ..., 11.        ,\n       27.        , 10.        ]))","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-08T21:57:33.708486","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0197518c-6799-77d3-bc5c-ba617c7e5839'), task_id='create_dict_train', dag_id='duration_prediction_dag', run_id='manual__2025-06-08T21:57:25.513936+00:00', try_number=1, map_index=-1, hostname='e3c3c14a0d0f', context_carrier={}, task=<Task(PythonOperator): create_dict_train>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 6, 8, 21, 57, 30, 463481, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-06-08T21:57:33.784209","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"TypeError","exc_value":"cannot serialize object of type <class 'numpy.ndarray'>","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":849,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1193,"name":"_push_xcom_if_needed"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":526,"name":"_xcom_push"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/xcom.py","lineno":64,"name":"set"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/xcom.py","lineno":283,"name":"serialize_value"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py","lineno":152,"name":"serialize"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py","lineno":129,"name":"serialize"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py","lineno":185,"name":"serialize"}]}]}
