{"timestamp":"2025-06-05T18:40:47.657668","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-05T18:40:47.658255","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/my_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-05T18:40:48.131646Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-05T18:40:48.131783Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-05T18:40:48.131868Z","level":"info","event":"Current task name:training_model_C","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-05T18:40:48.131942Z","level":"info","event":"Dag name:my_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-05T18:40:48.132013Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-05T18:40:48.132082Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-05T18:40:48.132180Z","level":"info","event":"Task operator:<Task(PythonOperator): training_model_C>","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-05T18:40:47.744267","level":"info","event":"Done. Returned value was: 2","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-05T18:40:47.744480","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01974164-e733-77e8-b3df-3f02041429a3'), task_id='training_model_C', dag_id='my_dag', run_id='manual__2025-06-05T18:40:21.277200+00:00', try_number=1, map_index=-1, hostname='721574e38d62', context_carrier={}, task=<Task(PythonOperator): training_model_C>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 6, 5, 18, 40, 44, 497882, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
